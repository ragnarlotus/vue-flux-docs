import{_ as o,r as p,o as c,c as l,b as n,d as a,a as t,e}from"./app-zCTnd8Wc.js";const r={},i=n("h1",{id:"fluxpreloader",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#fluxpreloader","aria-hidden":"true"},"#"),a(" FluxPreloader")],-1),u={class:"custom-container warning"},d=n("p",{class:"custom-container-title"},"WARNING",-1),k={href:"https://vuejs.org/v2/guide/components-slots.html#Named-Slots",target:"_blank",rel:"noopener noreferrer"},h=e('<h2 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h2><p>The included component in charge of showing the spinner and run transition when the images array change.</p><h2 id="attributes" tabindex="-1"><a class="header-anchor" href="#attributes" aria-hidden="true">#</a> Attributes</h2><h3 id="slider" tabindex="-1"><a class="header-anchor" href="#slider" aria-hidden="true">#</a> slider</h3><p>Is the VueFlux instance component from which to read the captions.</p><p>If you place this complement as a direct child in the VueFlux component you don&#39;t need to pass this attribute.</p><ul><li><strong>Type:</strong> <code>VueFlux</code></li><li><strong>Required:</strong> <code>false</code></li></ul><h3 id="spinner" tabindex="-1"><a class="header-anchor" href="#spinner" aria-hidden="true">#</a> spinner</h3><p>Define if you want to display the spinner.</p><ul><li><strong>Type:</strong> <code>Boolean</code></li><li><strong>Required:</strong> <code>false</code></li><li><strong>Default:</strong> <code>true</code></li></ul><h3 id="transition" tabindex="-1"><a class="header-anchor" href="#transition" aria-hidden="true">#</a> transition</h3><p>Is the transition name that you want to run when the images array change.</p><p>If no transition defined, the transition run will be the next of the transitions array.</p><ul><li><strong>Type:</strong> <code>String</code></li><li><strong>Required:</strong> <code>false</code></li></ul><h2 id="properties" tabindex="-1"><a class="header-anchor" href="#properties" aria-hidden="true">#</a> Properties</h2><h3 id="vf" tabindex="-1"><a class="header-anchor" href="#vf" aria-hidden="true">#</a> vf</h3><p>The <code>VueFlux</code> instance component.</p><ul><li><strong>Type:</strong> <code>VueFlux</code></li></ul><h3 id="captions" tabindex="-1"><a class="header-anchor" href="#captions" aria-hidden="true">#</a> captions</h3><p>The array of captions passed originally to the VueFlux component.</p><ul><li><strong>Type:</strong> <code>Array</code></li></ul><h2 id="templating" tabindex="-1"><a class="header-anchor" href="#templating" aria-hidden="true">#</a> Templating</h2><p>You can customize the spinner element using the slot.</p><p>You can get the progress through the <code>Images</code> controller, like <code>vf.Images.progress</code> where <code>vf</code> is the slider instance component.</p><p>The progress will be returned always as percentage. But you can access other Images controller variables like the following:</p><ul><li>loaded: <code>Number</code></li><li>progress: <code>Number</code></li><li>preloading: <code>Boolean</code></li><li>lazyloading: <code>Boolean</code></li></ul>',26),g={href:"https://github.com/ragnarlotus/vue-flux/blob/dev/src/controllers/Images.js",target:"_blank",rel:"noopener noreferrer"},m=e(`<h4 id="custom-component" tabindex="-1"><a class="header-anchor" href="#custom-component" aria-hidden="true">#</a> Custom component</h4><div class="language-html" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vue-flux</span>
   <span class="token attr-name">:images</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vfImages<span class="token punctuation">&quot;</span></span>
   <span class="token attr-name">:transitions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vfTransitions<span class="token punctuation">&quot;</span></span>
   <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>slider<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name"><span class="token namespace">v-slot:</span>preloader</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>flux-preloader</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name"><span class="token namespace">v-slot:</span>spinner</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>custom-spinner</span> <span class="token punctuation">/&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>flux-preloader</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vue-flux</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><h4 id="custom-structure" tabindex="-1"><a class="header-anchor" href="#custom-structure" aria-hidden="true">#</a> Custom structure</h4>`,3),f={href:"https://fontawesome.com/",target:"_blank",rel:"noopener noreferrer"},v=e(`<div class="language-html" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>vue-flux</span>
   <span class="token attr-name">:images</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vfImages<span class="token punctuation">&quot;</span></span>
   <span class="token attr-name">:transitions</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>vfTransitions<span class="token punctuation">&quot;</span></span>
   <span class="token attr-name">ref</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>slider<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name"><span class="token namespace">v-slot:</span>preloader</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>flux-preloader</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name"><span class="token namespace">v-slot:</span>spinner</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fa-3x<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fas fa-spinner fa-spin<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>flux-preloader</span><span class="token punctuation">&gt;</span></span>
   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>vue-flux</span><span class="token punctuation">&gt;</span></span>
</code></pre></div>`,1);function x(_,b){const s=p("ExternalLinkIcon");return c(),l("div",null,[i,n("div",u,[d,n("p",null,[a("I am using here the latest 2.6 vue syntax for slots, but if your Vue version is older check "),n("a",k,[a("Named-Slots"),t(s)]),a(" to see how slots are used in previous versions.")])]),h,n("p",null,[a("Feel free to take a look at the "),n("a",g,[a("Images controller"),t(s)]),a(".")]),m,n("p",null,[a("This is an example with "),n("a",f,[a("Font Awesome"),t(s)]),a(" spinner.")]),v])}const y=o(r,[["render",x],["__file","index.html.vue"]]);export{y as default};
