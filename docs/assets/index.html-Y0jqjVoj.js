import{_ as e,r as t,o,c as p,d as n,e as s,a as c,b as r}from"./app-8ofisRWT.js";const i={},l=n("h1",{id:"fluxgrid",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#fluxgrid","aria-hidden":"true"},"#"),s(" FluxGrid")],-1),u=n("h2",{id:"description",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#description","aria-hidden":"true"},"#"),s(" Description")],-1),d=n("p",null,"Component to make grid of resource or cube.",-1),k={href:"http://ragnarlotus.github.io/vue-flux-docs/demos/components/flux-grid.html",target:"_blank",rel:"noopener noreferrer"},h=r(`<h2 id="attributes" tabindex="-1"><a class="header-anchor" href="#attributes" aria-hidden="true">#</a> Attributes</h2><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">FluxCubeProps</span> <span class="token punctuation">{</span>
	size<span class="token operator">:</span> Size<span class="token punctuation">;</span>
	viewSize<span class="token operator">?</span><span class="token operator">:</span> Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	color<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
	colors<span class="token operator">?</span><span class="token operator">:</span> SidesColors <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	rsc<span class="token operator">?</span><span class="token operator">:</span> Resources<span class="token punctuation">;</span>
	rscs<span class="token operator">?</span><span class="token operator">:</span> SidesResources <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	rows<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
	cols<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
	css<span class="token operator">?</span><span class="token operator">:</span> CSSProperties<span class="token punctuation">;</span>
	depth<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	tileCss<span class="token operator">?</span><span class="token operator">:</span> CSSProperties<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="size" tabindex="-1"><a class="header-anchor" href="#size" aria-hidden="true">#</a> <code>size</code></h3><p>This size is the width and height in pixels that the component will have.</p><h3 id="view-size" tabindex="-1"><a class="header-anchor" href="#view-size" aria-hidden="true">#</a> <code>view-size</code></h3><p>When received, the component will overwrite the <code>size</code> attribute, but maintain the resource scaled and position values.</p><h3 id="color" tabindex="-1"><a class="header-anchor" href="#color" aria-hidden="true">#</a> <code>color</code></h3><p>Sets the background color when represented by one side or to all sides.</p><p>The values can be any valid CSS color.</p><h3 id="colors" tabindex="-1"><a class="header-anchor" href="#colors" aria-hidden="true">#</a> <code>colors</code></h3><p>Sets the background color to defined sides. This color will override the one defined in <code>color</code> parameter.</p><h3 id="rsc" tabindex="-1"><a class="header-anchor" href="#rsc" aria-hidden="true">#</a> <code>rsc</code></h3><p>Sets the resource when represented by one side or to all the sides.</p><h3 id="rscs" tabindex="-1"><a class="header-anchor" href="#rscs" aria-hidden="true">#</a> <code>rscs</code></h3><p>The object having the resources of defined sides. This resources will override the one defined in <code>rsc</code> parameter</p><h3 id="rows" tabindex="-1"><a class="header-anchor" href="#rows" aria-hidden="true">#</a> <code>rows</code></h3><p>The number of rows the grid will be made of.</p><h3 id="cols" tabindex="-1"><a class="header-anchor" href="#cols" aria-hidden="true">#</a> <code>cols</code></h3><p>The number of cols the grid will be made of.</p><h3 id="css" tabindex="-1"><a class="header-anchor" href="#css" aria-hidden="true">#</a> <code>css</code></h3><p>Object with CSS styles in camel case to apply to component.</p><h3 id="depth" tabindex="-1"><a class="header-anchor" href="#depth" aria-hidden="true">#</a> <code>depth</code></h3><p>Size in pixels for cube depth.</p><h3 id="tile-css" tabindex="-1"><a class="header-anchor" href="#tile-css" aria-hidden="true">#</a> <code>tile-css</code></h3><p>Object with CSS styles in camel case to be applied to all tiles.</p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// Set CSS styles to the grid</span>
<span class="token function">setCss</span><span class="token punctuation">(</span>css<span class="token operator">:</span> CSSProperties<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>

<span class="token comment">// Runs a function transform to each tile</span>
<span class="token function">transform</span><span class="token punctuation">(</span>cb<span class="token operator">:</span> <span class="token function">Function</span><span class="token punctuation">(</span>tile<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>

$grid<span class="token punctuation">.</span><span class="token function">transform</span><span class="token punctuation">(</span><span class="token punctuation">(</span>tile<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
   tile<span class="token punctuation">.</span><span class="token function">transform</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      transition<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">all 300ms ease </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i <span class="token operator">*</span> <span class="token number">100</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      opacity<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Show the cube, setting \`visibility\` to \`visible\`</span>
<span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>

<span class="token comment">// Hide the cube, setting \`visibility\` to \`hidden\`</span>
<span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>

<span class="token comment">// Returns the row number</span>
<span class="token function">getRowNumber</span><span class="token punctuation">(</span>tileNumber<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> numCols<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span>

<span class="token comment">// Returns the column number</span>
<span class="token function">getColNumber</span><span class="token punctuation">(</span>tileNumber<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">,</span> numCols<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">number</span>
</code></pre></div>`,27);function b(m,f){const a=t("ExternalLinkIcon");return o(),p("div",null,[l,u,d,n("p",null,[n("a",k,[s("Demo"),c(a)])]),h])}const g=e(i,[["render",b],["__file","index.html.vue"]]);export{g as default};
