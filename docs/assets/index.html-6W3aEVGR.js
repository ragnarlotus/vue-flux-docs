import{_ as e,o as a,c as s,e as t}from"./app-pGooBgpL.js";const n={},o=t(`<h1 id="fluxcube" tabindex="-1"><a class="header-anchor" href="#fluxcube" aria-hidden="true">#</a> FluxCube</h1><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h2><p>Component composed by up to 6 <a href="flux-image">FluxImage</a> that forms a cube.</p><h2 id="attributes" tabindex="-1"><a class="header-anchor" href="#attributes" aria-hidden="true">#</a> Attributes</h2><h3 id="color" tabindex="-1"><a class="header-anchor" href="#color" aria-hidden="true">#</a> color</h3><p>Sets the background color to all sides.</p><p>The values can be any valid CSS color.</p><ul><li><strong>Type:</strong> <code>String</code></li><li><strong>Required:</strong> <code>false</code></li></ul><h3 id="colors" tabindex="-1"><a class="header-anchor" href="#colors" aria-hidden="true">#</a> colors</h3><p>Sets the background color to defined sides.</p><p>The values can be any valid CSS color.</p><ul><li><strong>Type:</strong> <code>Object</code></li><li><strong>Required:</strong> <code>false</code></li><li><strong>Schema:</strong></li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
   <span class="token literal-property property">front</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
   <span class="token literal-property property">back</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
   <span class="token literal-property property">top</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
   <span class="token literal-property property">bottom</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
   <span class="token literal-property property">left</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
   <span class="token literal-property property">right</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="images" tabindex="-1"><a class="header-anchor" href="#images" aria-hidden="true">#</a> images</h3><p>The object having the image URLs of defined sides.</p><ul><li><strong>Type:</strong> <code>Object</code></li><li><strong>Required:</strong> <code>true</code></li><li><strong>Schema:</strong></li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
   <span class="token literal-property property">front</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
   <span class="token literal-property property">back</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
   <span class="token literal-property property">top</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
   <span class="token literal-property property">bottom</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
   <span class="token literal-property property">left</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
   <span class="token literal-property property">right</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="size" tabindex="-1"><a class="header-anchor" href="#size" aria-hidden="true">#</a> size</h3><p>This size is the width and height in pixels that the component will have.</p><p>The images received will be scaled and positioned to cover this size.</p><ul><li><strong>Type:</strong> <code>Object</code></li><li><strong>Required:</strong> <code>true</code></li><li><strong>Schema:</strong></li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
   <span class="token literal-property property">width</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
   <span class="token literal-property property">height</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="depth" tabindex="-1"><a class="header-anchor" href="#depth" aria-hidden="true">#</a> depth</h3><p>Size in pixels for cube depth.</p><ul><li><strong>Type:</strong> <code>Number</code></li><li><strong>Required:</strong> <code>false</code></li><li><strong>Default:</strong> <code>0</code></li></ul><h3 id="css" tabindex="-1"><a class="header-anchor" href="#css" aria-hidden="true">#</a> css</h3><p>Object with CSS styles in camel case to apply to component.</p><ul><li><strong>Type:</strong> <code>Object</code></li><li><strong>Required:</strong> <code>false</code></li></ul><h3 id="sides-css" tabindex="-1"><a class="header-anchor" href="#sides-css" aria-hidden="true">#</a> sides-css</h3><p>Object with CSS styles in camel case to apply per side.</p><ul><li><strong>Type:</strong> <code>Object</code></li><li><strong>Required:</strong> <code>false</code></li><li><strong>Schema:</strong></li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
   <span class="token literal-property property">front</span><span class="token operator">:</span> Object<span class="token punctuation">,</span>
   <span class="token literal-property property">back</span><span class="token operator">:</span> Object<span class="token punctuation">,</span>
   <span class="token literal-property property">top</span><span class="token operator">:</span> Object<span class="token punctuation">,</span>
   <span class="token literal-property property">bottom</span><span class="token operator">:</span> Object<span class="token punctuation">,</span>
   <span class="token literal-property property">left</span><span class="token operator">:</span> Object<span class="token punctuation">,</span>
   <span class="token literal-property property">right</span><span class="token operator">:</span> Object<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><h3 id="getside-side" tabindex="-1"><a class="header-anchor" href="#getside-side" aria-hidden="true">#</a> getSide(side)</h3><p>Gets the image by side.</p><ul><li>side <ul><li>Type: <code>String</code></li><li>Values: <code>&#39;back&#39; | &#39;top&#39; | &#39;bottom&#39; | &#39;left&#39; | &#39;right&#39;</code></li><li>Returns: the <a href="flux-image">FluxImage</a> side component.</li></ul></li></ul><h3 id="setcss-css" tabindex="-1"><a class="header-anchor" href="#setcss-css" aria-hidden="true">#</a> setCss(css)</h3><p>Set CSS styles to the cube.</p><ul><li>css <ul><li>Description: an object with the CSS attributes in <strong>camel case</strong> and values.</li><li>Type: <code>Object</code></li></ul></li></ul><h3 id="transform-css" tabindex="-1"><a class="header-anchor" href="#transform-css" aria-hidden="true">#</a> transform(css)</h3><p>Sets the CSS styles to be transformed to within a transition.</p><ul><li>css <ul><li>Description: an object with the CSS attributes in <strong>camel case</strong> and values.</li><li>Type: <code>Object</code></li></ul></li></ul><h3 id="show" tabindex="-1"><a class="header-anchor" href="#show" aria-hidden="true">#</a> show()</h3><p>Show the cube, setting <code>visibility</code> to <code>visible</code>.</p><h3 id="hide" tabindex="-1"><a class="header-anchor" href="#hide" aria-hidden="true">#</a> hide()</h3><p>Hide the cube, setting <code>visibility</code> to <code>hidden</code>.</p><h3 id="turn-side" tabindex="-1"><a class="header-anchor" href="#turn-side" aria-hidden="true">#</a> turn(side)</h3><p>Turns the cube to specified side (front, back, top, bottom, left, right).</p><ul><li>side <ul><li>Type: <code>String</code></li><li>Values: <code>&#39;front&#39; | back&#39; | &#39;top&#39; | &#39;bottom&#39; | &#39;left&#39; | &#39;right&#39;</code></li></ul></li></ul><h3 id="turntop" tabindex="-1"><a class="header-anchor" href="#turntop" aria-hidden="true">#</a> turnTop()</h3><p>Turns the cube to top.</p><h3 id="turnback" tabindex="-1"><a class="header-anchor" href="#turnback" aria-hidden="true">#</a> turnBack()</h3><p>Turns the cube to back side.</p><h3 id="turnbottom" tabindex="-1"><a class="header-anchor" href="#turnbottom" aria-hidden="true">#</a> turnBottom()</h3><p>Turns the cube to bottom.</p><h3 id="turnleft" tabindex="-1"><a class="header-anchor" href="#turnleft" aria-hidden="true">#</a> turnLeft()</h3><p>Turns the cube to left.</p><h3 id="turnright" tabindex="-1"><a class="header-anchor" href="#turnright" aria-hidden="true">#</a> turnRight()</h3><p>Turns the cube to right.</p>`,59),r=[o];function p(i,c){return a(),s("div",null,r)}const d=e(n,[["render",p],["__file","index.html.vue"]]);export{d as default};
