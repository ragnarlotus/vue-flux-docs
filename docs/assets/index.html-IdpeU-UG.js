import{_ as c,r as o,o as d,c as p,b as t,d as e,a as n,w as i,e as a}from"./app-k9p8jFez.js";const h={},l=t("h1",{id:"fluxtransition",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#fluxtransition","aria-hidden":"true"},"#"),e(" FluxTransition")],-1),u=t("h2",{id:"description",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#description","aria-hidden":"true"},"#"),e(" Description")],-1),m=t("p",null,"Component to display a transition animation between two resources.",-1),k={href:"http://ragnarlotus.github.io/vue-flux-docs/demos/components/flux-transition.html",target:"_blank",rel:"noopener noreferrer"},f=a(`<h2 id="attributes" tabindex="-1"><a class="header-anchor" href="#attributes" aria-hidden="true">#</a> Attributes</h2><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">FluxTransitionProps</span> <span class="token punctuation">{</span>
	size<span class="token operator">:</span> Size<span class="token punctuation">;</span>
	transition<span class="token operator">:</span> Object<span class="token punctuation">;</span>
	from<span class="token operator">:</span> Resource<span class="token punctuation">;</span>
	to<span class="token operator">:</span> Resource<span class="token punctuation">;</span>
	displayComponent<span class="token operator">?</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token operator">|</span> <span class="token builtin">any</span><span class="token punctuation">;</span>
	options<span class="token operator">?</span><span class="token operator">:</span> Object<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="size" tabindex="-1"><a class="header-anchor" href="#size" aria-hidden="true">#</a> <code>size</code></h3><p>This size is the width and height in pixels that the component will have.</p><h3 id="transition" tabindex="-1"><a class="header-anchor" href="#transition" aria-hidden="true">#</a> <code>transition</code></h3><p>The component that performs the animation.</p>`,6),b={class:"custom-container tip"},_=t("p",{class:"custom-container-title"},"TIP",-1),x=t("a",{href:"../custom-transitions"},"custom transitions",-1),w=a('<h3 id="from" tabindex="-1"><a class="header-anchor" href="#from" aria-hidden="true">#</a> <code>from</code></h3><p>This attribute will define transition starting resource.</p><h3 id="to" tabindex="-1"><a class="header-anchor" href="#to" aria-hidden="true">#</a> <code>to</code></h3><p>This attribute will define transition ending resource.</p><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> <code>options</code></h3><p>The transition options to overwrite the transition parameters.</p>',6),y=a('<p>For custom transitions, will apply the same.</p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// This method will call the method `onPlay`of the transition component, starting the transition.</span>\n<span class="token keyword">async</span> <span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>\n</code></pre></div><h2 id="emits" tabindex="-1"><a class="header-anchor" href="#emits" aria-hidden="true">#</a> Emits</h2><table><thead><tr><th>Name</th><th>Parameters</th><th>Description</th></tr></thead><tbody><tr><td><code>ready</code></td><td><code>transition: Object, from: Resource, to: Resource, options: Object, duration: number</code></td><td>Will be fired when the transition is ready to play because the components are rendered</td></tr><tr><td><code>start</code></td><td><code>transition: Object, from: Resource, to: Resource, options: Object, duration: number</code></td><td>Will let know when transition has started</td></tr><tr><td><code>end</code></td><td><code>transition: Object, from: Resource, to: Resource, options: Object, duration: number</code></td><td>Fired when transition ended</td></tr></tbody></table>',5);function g(v,T){const r=o("ExternalLinkIcon"),s=o("RouterLink");return d(),p("div",null,[l,u,m,t("p",null,[t("a",k,[e("Demo"),n(r)])]),f,t("div",b,[_,t("p",null,[e("Check "),n(s,{to:"/documentation/v7/components/transitions/"},{default:i(()=>[e("included transitions")]),_:1}),e(" or "),x,e(" for more details.")])]),w,t("p",null,[e("The available options depend on transition, so check the "),n(s,{to:"/documentation/v7/components/transitions/"},{default:i(()=>[e("transitions")]),_:1}),e(" to know which ones can be modified.")]),y])}const j=c(h,[["render",g],["__file","index.html.vue"]]);export{j as default};
