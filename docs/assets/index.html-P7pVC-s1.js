import{_ as s,r as o,o as p,c as i,b as a,d as n,a as t,e as c}from"./app-9q7i-DDF.js";const r={},l=a("h1",{id:"options-vs-composition-api",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#options-vs-composition-api","aria-hidden":"true"},"#"),n(" Options VS Composition API")],-1),d=a("h2",{id:"tl-dr",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#tl-dr","aria-hidden":"true"},"#"),n(" TL;DR")],-1),u=a("p",null,[n("If you are using "),a("code",null,"Composition"),n(" API like in the examples there is nothing special that you need to do, you can just copy and paste, done!")],-1),h=a("p",null,[n("If otherwise you are using "),a("code",null,"Options"),n(" API for creating your components you need to do the following.")],-1),k={href:"https://vuejs.org/api/reactivity-advanced.html#markraw",target:"_blank",rel:"noopener noreferrer"},m=c(`<p>Example:</p><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
   <span class="token keyword">return</span> <span class="token punctuation">{</span>
      rsc<span class="token operator">:</span> <span class="token function">markRaw</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Img</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/images/01.jpg</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token string">&#39;img 01&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
   <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre></div><h2 id="explanation" tabindex="-1"><a class="header-anchor" href="#explanation" aria-hidden="true">#</a> Explanation</h2><p>When using <code>Options</code> API, whatever you return in <code>data</code> is transformed into javascript <code>proxy</code> to track its reactivity, and when the component receive the props as proxy everything stops working as expected because for example <code>this</code> is meant in other scope.</p>`,4),_={href:"https://vuejs.org/api/reactivity-advanced.html#markraw",target:"_blank",rel:"noopener noreferrer"};function g(f,v){const e=o("ExternalLinkIcon");return p(),i("div",null,[l,d,u,h,a("p",null,[n("Use "),a("a",k,[n("markRaw"),t(e)]),n(" when you store the data with props for the component.")]),m,a("p",null,[n("Using "),a("a",_,[n("markRaw"),t(e)]),n(" will tell vue to keep it as it is and don't turn it into a proxy. This is really nice because instead of turning a whole object reactive, I was able to tell vue specifically what things should be reactive, so it is a great advance in performance.")])])}const y=s(r,[["render",g],["__file","index.html.vue"]]);export{y as default};
