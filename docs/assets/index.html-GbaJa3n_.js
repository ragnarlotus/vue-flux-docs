import{_ as s,r,o as d,c,b as t,d as e,a as o,w as i,e as n}from"./app-zCTnd8Wc.js";const l={},p=n(`<h1 id="fluxtransition" tabindex="-1"><a class="header-anchor" href="#fluxtransition" aria-hidden="true">#</a> FluxTransition</h1><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h2><p>Component to display a transition between two images.</p><h2 id="attributes" tabindex="-1"><a class="header-anchor" href="#attributes" aria-hidden="true">#</a> Attributes</h2><h3 id="size" tabindex="-1"><a class="header-anchor" href="#size" aria-hidden="true">#</a> size</h3><p>This size is the width and height in pixels that the component will have.</p><p>The transition images will be scaled and positioned to cover this size.</p><ul><li><strong>Type:</strong> <code>Object</code></li><li><strong>Required:</strong> <code>true</code></li><li><strong>Schema:</strong></li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
   <span class="token literal-property property">width</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
   <span class="token literal-property property">height</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="transition" tabindex="-1"><a class="header-anchor" href="#transition" aria-hidden="true">#</a> transition</h3><p>Can be a <code>String</code> with the name of one of the 20 included transitions, an <code>Object</code> with included transition name and options, or an <code>Object</code> of custom transition with name, options and component.</p><ul><li><strong>Type:</strong> <code>String | Object</code></li><li><strong>Required:</strong> <code>true</code></li><li><strong>Object schema:</strong></li></ul><div class="language-javascript" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
   <span class="token literal-property property">name</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
   <span class="token literal-property property">component</span><span class="token operator">:</span> Component<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre></div><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>If the included transition is not found, or custom transition <code>component</code> attribute not defined, an error will be <code>thrown</code>.</p></div>`,14),h={class:"custom-container tip"},u=t("p",{class:"custom-container-title"},"TIP",-1),m=t("a",{href:"../custom-transitions"},"custom transitions",-1),g=n('<h3 id="from" tabindex="-1"><a class="header-anchor" href="#from" aria-hidden="true">#</a> from</h3><p>This attribute will define transition starting image.</p><ul><li><strong>Type:</strong> <code>String</code></li><li><strong>Required:</strong> <code>true</code></li></ul><h3 id="to" tabindex="-1"><a class="header-anchor" href="#to" aria-hidden="true">#</a> to</h3><p>This attribute will define transition ending image.</p><ul><li><strong>Type:</strong> <code>String</code></li><li><strong>Required:</strong> <code>true</code></li></ul><h3 id="options" tabindex="-1"><a class="header-anchor" href="#options" aria-hidden="true">#</a> options</h3><p>The transition options to overwrite the transition parameters.</p><ul><li><strong>Type:</strong> <code>Object</code></li><li><strong>Required:</strong> <code>false</code></li></ul>',9),f=n('<p>For custom transitions, will apply the same.</p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><h3 id="start" tabindex="-1"><a class="header-anchor" href="#start" aria-hidden="true">#</a> start()</h3><p>This method will call the method <code>played</code>of the transition component, starting the transition.</p><h3 id="getduration" tabindex="-1"><a class="header-anchor" href="#getduration" aria-hidden="true">#</a> getDuration()</h3><ul><li>Returns: the number in <em>ms</em> the transition will last.</li></ul><h2 id="events" tabindex="-1"><a class="header-anchor" href="#events" aria-hidden="true">#</a> Events</h2><ul><li><code>ready</code>: will be fired when the transition is ready to play because the components are rendered.</li><li><code>start</code>: will let know when transition has started.</li><li><code>end</code>: fired when transition ended.</li></ul>',8);function b(w,_){const a=r("RouterLink");return d(),c("div",null,[p,t("div",h,[u,t("p",null,[e("Check "),o(a,{to:"/documentation/v6/components/transitions/"},{default:i(()=>[e("included transitions")]),_:1}),e(" or "),m,e(" for more details.")])]),g,t("p",null,[e("The available options depend on transition, so check the "),o(a,{to:"/documentation/v6/components/transitions/"},{default:i(()=>[e("transition")]),_:1}),e(" to know which ones can be modified.")]),f])}const k=s(l,[["render",b],["__file","index.html.vue"]]);export{k as default};
