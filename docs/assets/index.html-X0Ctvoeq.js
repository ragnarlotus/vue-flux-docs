import{_ as e,o as a,c as s,b as n}from"./app-50w0ji3D.js";const i={},t=n(`<h1 id="fluximage" tabindex="-1"><a class="header-anchor" href="#fluximage" aria-hidden="true">#</a> FluxImage</h1><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description" aria-hidden="true">#</a> Description</h2><p>The FluxImage component represents the lowest component of library and displays an image, part of it or a color.</p><h2 id="attributes" tabindex="-1"><a class="header-anchor" href="#attributes" aria-hidden="true">#</a> Attributes</h2><h3 id="color" tabindex="-1"><a class="header-anchor" href="#color" aria-hidden="true">#</a> color</h3><p>Sets the background color.</p><p>The values can be any valid CSS color.</p><ul><li><strong>Type:</strong> <code>String</code></li><li><strong>Required:</strong> <code>false</code></li></ul><h3 id="image" tabindex="-1"><a class="header-anchor" href="#image" aria-hidden="true">#</a> image</h3><p>The URL of the image to be displayed.</p><ul><li><strong>Type:</strong> <code>String</code></li><li><strong>Required:</strong> <code>false</code></li></ul><h3 id="size" tabindex="-1"><a class="header-anchor" href="#size" aria-hidden="true">#</a> size</h3><p>This size is the width and height in pixels that the component will have.</p><p>If receives an image, the image will be scaled and positioned to cover this size.</p><ul><li><strong>Type:</strong> <code>Object</code></li><li><strong>Required:</strong> <code>false</code></li><li><strong>Schema:</strong></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
   <span class="token literal-property property">width</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
   <span class="token literal-property property">height</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="view-size" tabindex="-1"><a class="header-anchor" href="#view-size" aria-hidden="true">#</a> view-size</h3><p>When received, the component will overwrite the <code>size</code> attribute, but maintain the image scaled and position values.</p><ul><li><strong>Type:</strong> <code>Object</code></li><li><strong>Required:</strong> <code>false</code></li><li><strong>Schema:</strong></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
   <span class="token literal-property property">width</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
   <span class="token literal-property property">height</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="offset" tabindex="-1"><a class="header-anchor" href="#offset" aria-hidden="true">#</a> offset</h3><p>It&#39;s an adjustment of the image position in pixels based on the top and left.</p><p>In case you do not set one of them, will default to <code>0</code>.</p><ul><li><strong>Type:</strong> <code>Object</code></li><li><strong>Required:</strong> <code>false</code></li><li><strong>Schema:</strong></li></ul><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
   <span class="token literal-property property">top</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
   <span class="token literal-property property">left</span><span class="token operator">:</span> Number<span class="token punctuation">,</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="css" tabindex="-1"><a class="header-anchor" href="#css" aria-hidden="true">#</a> css</h3><p>Object with CSS styles in camel case to apply to component.</p><ul><li><strong>Type:</strong> <code>Object</code></li><li><strong>Required:</strong> <code>false</code></li></ul><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><h3 id="setcss-css" tabindex="-1"><a class="header-anchor" href="#setcss-css" aria-hidden="true">#</a> setCss(css)</h3><p>Set CSS styles to the image.</p><ul><li>css <ul><li>Description: an object with the CSS attributes in <strong>camel case</strong> and values.</li><li>Type: <code>Object</code></li></ul></li></ul><h3 id="transform-css" tabindex="-1"><a class="header-anchor" href="#transform-css" aria-hidden="true">#</a> transform(css)</h3><p>Sets the CSS styles to be transformed to within a transition.</p><ul><li>css <ul><li>Description: an object with the CSS attributes in <strong>camel case</strong> and values.</li><li>Type: <code>Object</code></li></ul></li></ul><h3 id="show" tabindex="-1"><a class="header-anchor" href="#show" aria-hidden="true">#</a> show()</h3><p>Show the image, setting <code>visibility</code> to <code>visible</code>.</p><h3 id="hide" tabindex="-1"><a class="header-anchor" href="#hide" aria-hidden="true">#</a> hide()</h3><p>Hide the image, setting <code>visibility</code> to <code>hidden</code>.</p>`,39),o=[t];function r(l,d){return a(),s("div",null,o)}const p=e(i,[["render",r],["__file","index.html.vue"]]);export{p as default};
