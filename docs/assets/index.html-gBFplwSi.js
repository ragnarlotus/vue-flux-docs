import{_ as e,r as t,o,c as p,b as n,d as s,a as c,e as i}from"./app-f_FCzlUc.js";const r={},l=n("h1",{id:"fluxvortex",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#fluxvortex","aria-hidden":"true"},"#"),s(" FluxVortex")],-1),u=n("h2",{id:"description",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#description","aria-hidden":"true"},"#"),s(" Description")],-1),d=n("p",null,"Resource component made of concentric circles.",-1),h={href:"http://ragnarlotus.github.io/vue-flux-docs/demos/components/flux-vortex.html",target:"_blank",rel:"noopener noreferrer"},k=i(`<h2 id="props" tabindex="-1"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h2><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">FluxVortexProps</span> <span class="token punctuation">{</span>
	size<span class="token operator">:</span> Size<span class="token punctuation">;</span>
	viewSize<span class="token operator">?</span><span class="token operator">:</span> Size<span class="token punctuation">;</span>
	color<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
	rsc<span class="token operator">:</span> Resource<span class="token punctuation">;</span>
	offset<span class="token operator">?</span><span class="token operator">:</span> Position<span class="token punctuation">;</span>
	css<span class="token operator">?</span><span class="token operator">:</span> CSSProperties<span class="token punctuation">;</span>
	circles<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
	tileCss<span class="token operator">?</span><span class="token operator">:</span> CSSProperties<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="size" tabindex="-1"><a class="header-anchor" href="#size" aria-hidden="true">#</a> <code>size</code></h3><p>This size is the width and height in pixels that the component will have.</p><h3 id="view-size" tabindex="-1"><a class="header-anchor" href="#view-size" aria-hidden="true">#</a> <code>view-size</code></h3><p>When received, the component will overwrite the <code>size</code> attribute, but maintain the resource scaled and position values.</p><h3 id="color" tabindex="-1"><a class="header-anchor" href="#color" aria-hidden="true">#</a> <code>color</code></h3><p>Sets the background color when represented by one side or to all sides.</p><p>The values can be any valid CSS color.</p><h3 id="rsc" tabindex="-1"><a class="header-anchor" href="#rsc" aria-hidden="true">#</a> <code>rsc</code></h3><p>The resource to be displayed.</p><h3 id="offset" tabindex="-1"><a class="header-anchor" href="#offset" aria-hidden="true">#</a> <code>offset</code></h3><p>It&#39;s an adjustment of the image position in pixels based on the top and left.</p><h3 id="css" tabindex="-1"><a class="header-anchor" href="#css" aria-hidden="true">#</a> <code>css</code></h3><p>Object with CSS styles in camel case to apply to component.</p><h3 id="circles" tabindex="-1"><a class="header-anchor" href="#circles" aria-hidden="true">#</a> <code>circles</code></h3><p>The number of circles the vortex will be made of.</p><h3 id="tile-css" tabindex="-1"><a class="header-anchor" href="#tile-css" aria-hidden="true">#</a> <code>tile-css</code></h3><p>Object with CSS styles in camel case to be applied to all tiles.</p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// Set CSS styles to the grid</span>
<span class="token function">setCss</span><span class="token punctuation">(</span>css<span class="token operator">:</span> CSSProperties<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>

<span class="token comment">// Runs a function transform to each tile</span>
<span class="token function">transform</span><span class="token punctuation">(</span>cb<span class="token operator">:</span> <span class="token function">Function</span><span class="token punctuation">(</span>tile<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>

$vortex<span class="token punctuation">.</span><span class="token function">transform</span><span class="token punctuation">(</span><span class="token punctuation">(</span>tile<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> index<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
   tile<span class="token punctuation">.</span><span class="token function">transform</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      transition<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">all 300ms ease </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>i <span class="token operator">*</span> <span class="token number">100</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      opacity<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Show the cube, setting \`visibility\` to \`visible\`</span>
<span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>

<span class="token comment">// Hide the cube, setting \`visibility\` to \`hidden\`</span>
<span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
</code></pre></div>`,21);function f(m,b){const a=t("ExternalLinkIcon");return o(),p("div",null,[l,u,d,n("p",null,[n("a",h,[s("Demo"),c(a)])]),k])}const v=e(r,[["render",f],["__file","index.html.vue"]]);export{v as default};
