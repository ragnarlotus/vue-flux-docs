import{_ as t,r as e,o,c as p,b as s,d as n,a as c,e as r}from"./app-zCTnd8Wc.js";const i={},l=s("h1",{id:"fluxcube",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#fluxcube","aria-hidden":"true"},"#"),n(" FluxCube")],-1),u=s("h2",{id:"description",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#description","aria-hidden":"true"},"#"),n(" Description")],-1),d=s("p",null,"Component composed by up to 6 resources that forms a cube.",-1),k={href:"http://ragnarlotus.github.io/vue-flux-docs/demos/components/flux-cube.html",target:"_blank",rel:"noopener noreferrer"},h=r(`<h2 id="props" tabindex="-1"><a class="header-anchor" href="#props" aria-hidden="true">#</a> Props</h2><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">FluxCubeProps</span> <span class="token punctuation">{</span>
	size<span class="token operator">:</span> Size<span class="token punctuation">;</span>
	viewSize<span class="token operator">?</span><span class="token operator">:</span> Size <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	color<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
	colors<span class="token operator">?</span><span class="token operator">:</span> SidesColors <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	rsc<span class="token operator">?</span><span class="token operator">:</span> Resource<span class="token punctuation">;</span>
	rscs<span class="token operator">?</span><span class="token operator">:</span> SidesResources <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	offset<span class="token operator">:</span><span class="token operator">?</span> Position<span class="token punctuation">;</span>
	offsets<span class="token operator">?</span><span class="token operator">:</span> SidesOffsets <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	css<span class="token operator">?</span><span class="token operator">:</span> CSSProperties<span class="token punctuation">;</span>
	depth<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">number</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	origin<span class="token operator">?</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="size" tabindex="-1"><a class="header-anchor" href="#size" aria-hidden="true">#</a> <code>size</code></h3><p>This size is the width and height in pixels that the component will have taking as reference the the front.</p><h3 id="view-size" tabindex="-1"><a class="header-anchor" href="#view-size" aria-hidden="true">#</a> <code>view-size</code></h3><p>When received, the component will overwrite the <code>size</code> attribute, but maintain the resource scaled and position values.</p><h3 id="color" tabindex="-1"><a class="header-anchor" href="#color" aria-hidden="true">#</a> <code>color</code></h3><p>Sets the background color to all sides.</p><p>The values can be any valid CSS color.</p><h3 id="colors" tabindex="-1"><a class="header-anchor" href="#colors" aria-hidden="true">#</a> <code>colors</code></h3><p>Sets the background color to defined sides. This color will override the one defined in <code>color</code> parameter.</p><h3 id="rsc" tabindex="-1"><a class="header-anchor" href="#rsc" aria-hidden="true">#</a> <code>rsc</code></h3><p>Sets the resource to all the sides.</p><h3 id="rscs" tabindex="-1"><a class="header-anchor" href="#rscs" aria-hidden="true">#</a> <code>rscs</code></h3><p>The object having the resources of defined sides. This resources will override the one defined in <code>rsc</code> parameter</p><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">SidesResources</span> <span class="token punctuation">{</span>
	<span class="token punctuation">[</span>Sides<span class="token punctuation">.</span>front<span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> Resource<span class="token punctuation">;</span>
	<span class="token punctuation">[</span>Sides<span class="token punctuation">.</span>back<span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> Resource<span class="token punctuation">;</span>
	<span class="token punctuation">[</span>Sides<span class="token punctuation">.</span>left<span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> Resource<span class="token punctuation">;</span>
	<span class="token punctuation">[</span>Sides<span class="token punctuation">.</span>right<span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> Resource<span class="token punctuation">;</span>
	<span class="token punctuation">[</span>Sides<span class="token punctuation">.</span>top<span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> Resource<span class="token punctuation">;</span>
	<span class="token punctuation">[</span>Sides<span class="token punctuation">.</span>bottom<span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> Resource<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="offset" tabindex="-1"><a class="header-anchor" href="#offset" aria-hidden="true">#</a> <code>offset</code></h3><p>Sets the position to all sides.</p><h3 id="offsets" tabindex="-1"><a class="header-anchor" href="#offsets" aria-hidden="true">#</a> <code>offsets</code></h3><p>The positions of defined sides. This position will override the one defined in <code>offset</code> parameter.</p><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">interface</span> <span class="token class-name">SidesOffsets</span> <span class="token punctuation">{</span>
	<span class="token punctuation">[</span>Sides<span class="token punctuation">.</span>front<span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> Position<span class="token punctuation">;</span>
	<span class="token punctuation">[</span>Sides<span class="token punctuation">.</span>back<span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> Position<span class="token punctuation">;</span>
	<span class="token punctuation">[</span>Sides<span class="token punctuation">.</span>left<span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> Position<span class="token punctuation">;</span>
	<span class="token punctuation">[</span>Sides<span class="token punctuation">.</span>right<span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> Position<span class="token punctuation">;</span>
	<span class="token punctuation">[</span>Sides<span class="token punctuation">.</span>top<span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> Position<span class="token punctuation">;</span>
	<span class="token punctuation">[</span>Sides<span class="token punctuation">.</span>bottom<span class="token punctuation">]</span><span class="token operator">?</span><span class="token operator">:</span> Position<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h3 id="css" tabindex="-1"><a class="header-anchor" href="#css" aria-hidden="true">#</a> <code>css</code></h3><p>Object with CSS styles in camel case to apply to component.</p><h3 id="depth" tabindex="-1"><a class="header-anchor" href="#depth" aria-hidden="true">#</a> <code>depth</code></h3><p>Size in pixels for cube depth.</p><h2 id="methods" tabindex="-1"><a class="header-anchor" href="#methods" aria-hidden="true">#</a> Methods</h2><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// Set CSS styles to the cube</span>
<span class="token function">setCss</span><span class="token punctuation">(</span>css<span class="token operator">:</span> CSSProperties<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>

<span class="token comment">// Sets the CSS styles to be transformed to within a transition</span>
<span class="token function">transform</span><span class="token punctuation">(</span>css<span class="token operator">:</span> CSSProperties<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>

<span class="token comment">// Show the cube, setting \`visibility\` to \`visible\`</span>
<span class="token function">show</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>

<span class="token comment">// Hide the cube, setting \`visibility\` to \`hidden\`</span>
<span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>

<span class="token comment">// Turns the cube to specified side (front, back, backr, backl, top, bottom, left, right)</span>
<span class="token function">turn</span><span class="token punctuation">(</span>side<span class="token operator">:</span> Turn<span class="token punctuation">)</span><span class="token operator">:</span> <span class="token keyword">void</span>
</code></pre></div>`,27);function f(b,m){const a=e("ExternalLinkIcon");return o(),p("div",null,[l,u,d,s("p",null,[s("a",k,[n("Demo"),c(a)])]),h])}const v=t(i,[["render",f],["__file","index.html.vue"]]);export{v as default};
